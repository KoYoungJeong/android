apply plugin: 'android'
apply plugin: 'android-apt'

configurations {
    apt
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libraries:SlidingMenu:library')
    apt 'org.androidannotations:androidannotations:3.0.1'
    // You must install or update the Google Repository through the SDK manager to use this dependency.
    // for HttpBasicAuthenticatorInterceptor
    compile 'com.android.support:appcompat-v7:19.+'
    compile 'com.google.android.gms:play-services:3.1.+'
    compile 'com.navercorp.pulltorefresh:library:3.2.0@aar'
    compile 'com.github.jfragosoperez:hideybarphotoviewscreen:1.+'
    compile 'de.greenrobot:eventbus:2.2.+'
//    compile 'eu.inmite.android.lib:android-styled-dialogs:1.2.+'
    compile 'org.androidannotations:androidannotations-api:3.0.1'
    compile 'org.springframework.android:spring-android-core:1.0.+'
    compile 'org.springframework.android:spring-android-rest-template:1.0.+'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.+'
    compile 'com.squareup.picasso:picasso:2.2.+'
    compile 'com.koushikdutta.ion:ion:1.+'
    compile 'com.github.johnpersano:supertoasts:1.3.4@aar'
    compile 'log4j:log4j:1.2.+'
    compile 'de.mindpipe.android:android-logging-log4j:1.0.+'
    compile 'com.android.support:support-v13:19.+'
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1'

    defaultConfig {
        applicationId 'com.tosslab.jandi.app'
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 6
        versionName '0.1.5'
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    productFlavors {
        defaultFlavor {
            proguardFile 'proguard-rules.txt'
        }
    }

    packagingOptions {
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
        }
    }

    signingConfigs {
        release {
            storeFile file("tossandroid.keystore")
            storePassword ''
            keyAlias "tossandroid"
            keyPassword ''
        }
        debug {
//            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

apt {
    arguments {
        resourcePackageName android.defaultConfig.packageName
        androidManifestFile variant.processResources.manifestFile
    }
}

import groovy.swing.SwingBuilder
gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':app:assembleRelease')) {
        def storePass = ''
        def keyPass = ''
        if (System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true, title: 'Enter password', alwaysOnTop: true, resizable: false, locationRelativeTo: null, pack: true, show: true) {
                    vbox { // Put everything below each other
                        label(text: "Please enter store passphrase:")
                        def input1 = passwordField()
                        label(text: "Please enter key passphrase:")
                        def input2 = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            storePass = input1.password;
                            keyPass = input2.password;
                            dispose();
                        })
                    }
                }
            }
        } else {
            storePass = System.console().readPassword("\nPlease enter store passphrase: ")
            keyPass = System.console().readPassword("\nPlease enter key passphrase: ")
        }

        if (storePass.size() <= 0 || keyPass.size() <= 0) {
            throw new InvalidUserDataException("You must enter the passwords to proceed.")
        }

        storePass = new String(storePass)
        keyPass = new String(keyPass)

        android.signingConfigs.release.storePassword = storePass
        android.signingConfigs.release.keyPassword = keyPass
    }
}