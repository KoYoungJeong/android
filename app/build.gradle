apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

apply plugin: 'android-apt'     // Android-Annotation
apply plugin: 'me.tatarka.retrolambda'  //RetroLamda
apply from: 'valid.gradle'       // Gradle Propertie Valid Check
apply from: 'scripts/resources/strings/string-resource-crawler.gradle'
apply from: 'scripts/resources/images/image-resource-crawler.gradle'
apply from: 'apk-name-changer.gradle'

configurations {
    apt
}

apply plugin: 'checkstyle'
apply plugin: 'pmd'

task pmd(type: Pmd) {

    source 'src/main'
    include '**/*.java'
//    exclude('**/*Test.java')

    ruleSetFiles = files('../pmd.xml')
    ignoreFailures = true

}

task checkstyles(type: Checkstyle) {

    configFile file('../checkstyle.xml')
    source('src/main')
    include '**/*.java'
//    exclude('**/*Test.java')
    classpath = files()


    showViolations = true
    ignoreFailures = true

}

task resourceRefresh
resourceRefresh.dependsOn(stringResourceRefresh, imageResourceRefresh)

checkstyle {
    toolVersion = "6.2"
}

dependencies {

    repositories {
        jcenter()
        maven {
            url 'https://maven.fabric.io/public'
        }

        maven {
            url 'http://nx.jandi.io:8081/nexus/content/repositories/thirdparty/'
        }

    }

    compile rootProject.ext.dependecies['libraries']['sprinklrAndroid']
    compile rootProject.ext.dependecies['libraries']['photoView']
    compile rootProject.ext.dependecies['libraries']['imageZoomCrop']

//    compile project(':sprinkler-android')
//    compile project(':photoview-expand')

    apt rootProject.ext.dependecies['libraries']['androidAnnotationApt']
    compile rootProject.ext.dependecies['libraries']['androidAnnotation']
    compile rootProject.ext.dependecies['libraries']['butterknife']

    apt rootProject.ext.dependecies['libraries']['dagger2Apt']
    compile rootProject.ext.dependecies['libraries']['dagger2']
    provided rootProject.ext.dependecies['libraries']['jsr250']

    compile rootProject.ext.dependecies['libraries']['multidex']
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Google
    compile rootProject.ext.dependecies['libraries']['googleAnalytics']
    compile rootProject.ext.dependecies['libraries']['multidex']
    compile rootProject.ext.dependecies['libraries']['support_appcompat']
    compile rootProject.ext.dependecies['libraries']['support_v4']
    compile rootProject.ext.dependecies['libraries']['support_v13']
    compile rootProject.ext.dependecies['libraries']['support_recyclerview']
    compile rootProject.ext.dependecies['libraries']['support_cardview']
    compile rootProject.ext.dependecies['libraries']['support_annotation']
    compile rootProject.ext.dependecies['libraries']['support_design']

    // UI
    compile rootProject.ext.dependecies['libraries']['supertoast']
    compile rootProject.ext.dependecies['libraries']['recyclerview_stickyheader']
    compile rootProject.ext.dependecies['libraries']['android_crop']

    // BadgeCount
    compile rootProject.ext.dependecies['libraries']['shortcutbadger']
    // Boilerplate
    compile rootProject.ext.dependecies['libraries']['eventbus']
    // Network
    compile(rootProject.ext.dependecies['libraries']['socketio']) {
        exclude group: 'org.json', module: 'json'
    }

    // Cache
    compile rootProject.ext.dependecies['libraries']['ion']
    // Image
    compile rootProject.ext.dependecies['libraries']['glide_okhttp']
    compile rootProject.ext.dependecies['libraries']['glide_transformation']

    // Sliqte ORM
    compile rootProject.ext.dependecies['libraries']['ormlite']

    // Analytics & report
    compile rootProject.ext.dependecies['libraries']['parse']
    // RxJava
    compile rootProject.ext.dependecies['libraries']['rxandroid']
    compile rootProject.ext.dependecies['libraries']['rxjava']

    // facebook SDK
    compile rootProject.ext.dependecies['libraries']['facebook']

    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile rootProject.ext.dependecies['libraries']['testrunner']
    androidTestCompile rootProject.ext.dependecies['libraries']['testrule']
    androidTestCompile rootProject.ext.dependecies['libraries']['espresso_core']
    androidTestCompile rootProject.ext.dependecies['libraries']['espresso_intent']
    androidTestCompile rootProject.ext.dependecies['libraries']['dexmaker_mockito']
    androidTestCompile rootProject.ext.dependecies['libraries']['dexmaker_dx']
    androidTestCompile rootProject.ext.dependecies['libraries']['awaitility']
    androidTestCompile rootProject.ext.dependecies['libraries']['assertj_android']
    androidTestCompile rootProject.ext.dependecies['libraries']['assertj_android_support']
    androidTestCompile rootProject.ext.dependecies['libraries']['assertj_android_appcompat']
    androidTestCompile rootProject.ext.dependecies['libraries']['assertj_android_recyclerview']
    androidTestApt rootProject.ext.dependecies['libraries']['dagger2Apt']

    compile(rootProject.ext.dependecies['libraries']['crashlytics']) {
        transitive = true;
    }

    // Calendar View
    compile rootProject.ext.dependecies['libraries']['material_calendarview']

    // Joda time
    compile rootProject.ext.dependecies['libraries']['joda_time']

    // newrelic
    compile rootProject.ext.dependecies['libraries']['newrelic']

    //Retrofit
    compile rootProject.ext.dependecies['libraries']['retrofit2']
    compile rootProject.ext.dependecies['libraries']['okhttp3']
    compile rootProject.ext.dependecies['libraries']['okhttp3_ws']
    compile rootProject.ext.dependecies['libraries']['jackson']
    debugCompile rootProject.ext.dependecies['libraries']['okhttp3_logging']

    debugCompile rootProject.ext.dependecies['libraries']['stetho_okhttp3']
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId 'com.tosslab.jandi.app'
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 175
        versionName '2.2.0'

        // for Ui Testing
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {

        debug {
            debuggable true
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

    }
    productFlavors {
        full {     // release version
//            proguardFile 'proguard-rules.txt'
        }
        dev {       // demo version
            applicationId 'com.tosslab.jandi.app.dev'
            versionName(defaultConfig.versionName + ".dev." + inhouse_version)
            minSdkVersion 19
        }

        qa {       // demo version
            applicationId 'com.tosslab.jandi.app.dev'
            versionName(defaultConfig.versionName + ".qa." + inhouse_version)
        }

        inhouse {
            versionName(defaultConfig.versionName + "." + inhouse_version)
            buildTypes {
            }
        }

    }

    sourceSets {
        inhouse {
            java.srcDirs = ['src/full/java']
        }

        qa {
            java.srcDirs = ['src/dev/java']
            res.srcDirs = ['src/dev/res']
        }

        main.res.srcDirs += 'src/main/res-crawrer'
        main.java.srcDirs += 'src/main/java-push'
    }

    packagingOptions.excludes = [
            'META-INF/DEPENDENCIES',
            'META-INF/LICENSE',
            'META-INF/LICENSE.txt',
            'LICENSE.txt',
            'LICENSE',
            'META-INF/license.txt',
            'META-INF/NOTICE',
            'NOTICE',
            'asm-license.txt',
            'META-INF/NOTICE.txt',
            'META-INF/notice.txt',
            'META-INF/ASL2.0',
            'META-INF/maven/com.google.guava/guava/pom.properties',
            'META-INF/maven/com.google.guava/guava/pom.xml'
    ]

    signingConfigs {
        release {
            storeFile file("keystore/tossandroid.keystore")
            keyAlias "tosskeystore"
            storePassword "Xhtmfoq23@#"
            keyPassword "Xhtmfoq23@#"
        }
        debug {
            storeFile file("keystore/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "2g"
        incremental true
        maxProcessCount Math.max(1, ((int) (Runtime.getRuntime().availableProcessors() / 2)))
    }

    configurations.all {
        resolutionStrategy {
            force "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

project.gradle.taskGraph.whenReady {
    connectedDevDebugAndroidTest {
        ignoreFailures = true
    }
}

apt {
    arguments {
        resourcePackageName android.defaultConfig.applicationId
        androidManifestFile variant.outputs[0].processResources.manifestFile
    }
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}