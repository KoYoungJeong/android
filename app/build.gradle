apply plugin: 'android'
apply plugin: 'android-apt'
apply plugin: 'newrelic'

configurations {
    apt
}

dependencies {
    apt 'org.androidannotations:androidannotations:3.0.1'
    // Google
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.google.android.gms:play-services:5.+'
    compile 'com.android.support:support-v13:20.+'
    // UI
    compile 'com.navercorp.pulltorefresh:library:3.2.0@aar'
    compile 'com.github.jfragosoperez:hideybarphotoviewscreen:1.+'
    compile 'com.github.johnpersano:supertoasts:1.3.4@aar'
    compile 'com.nhaarman.supertooltips:library:3.0.+'
    // Boilerplate
    compile 'de.greenrobot:eventbus:2.2.1'
    compile 'org.androidannotations:androidannotations-api:3.0.1'
    // Network
    compile 'org.springframework.android:spring-android-core:1.0.+'
    compile 'org.springframework.android:spring-android-rest-template:1.0.+'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.+'
    compile 'org.jsoup:jsoup:1.7.3'
    // Cache
    compile 'com.squareup.picasso:picasso:2.3.+'
    compile 'com.koushikdutta.ion:ion:1.+'
    // Etc
    compile 'log4j:log4j:1.2.+'
    compile 'de.mindpipe.android:android-logging-log4j:1.0.+'
    // Analytics & report
    compile 'com.newrelic.agent.android:android-agent:4.+'
    compile 'com.mixpanel.android:mixpanel-android:4.3.0@aar'
    compile 'com.parse.bolts:bolts-android:1.1.2'
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1'

    defaultConfig {
        applicationId 'com.tosslab.jandi.app'
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 21
        versionName '0.3.13'
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    productFlavors {
        full {     // release version
//            proguardFile 'proguard-rules.txt'
        }
        dev {       // demo version
            applicationId 'com.tosslab.jandi.app.dev'
            versionName(defaultConfig.versionName + ".dev")
        }
    }

    packagingOptions {
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
        }
    }

    signingConfigs {
        release {
            storeFile file("tossandroid.keystore")
            keyAlias "tosskeystore"
            storePassword "Xhtmfoq23@#"
            keyPassword "Xhtmfoq23@#"
//            storePassword System.getenv("JANDI_KSTOREPWD")
//            keyPassword System.getenv("JANDI_KEYPWD")
        }
        debug {
//            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

//def getSourceSetName(variant) {
//    return new File(variant.dirName).getName();
//}
//
//android.applicationVariants.all { variant ->
//    def aptOutputDir = project.file("build/source/apt")
//    def aptOutput = new File(aptOutputDir, variant.dirName)
//    println "****************************"
//    println "variant: ${variant.name}"
//    println "manifest:  ${variant.processResources.manifestFile}"
//    println "aptOutput:  ${aptOutput}"
//    println "****************************"
//
//    android.sourceSets[getSourceSetName(variant)].java.srcDirs += aptOutput.getPath()
//
//    variant.javaCompile.options.compilerArgs += [
//            '-processorpath', configurations.apt.getAsPath(),
//            '-AandroidManifestFile=' + variant.processResources.manifestFile,
//            '-AresourcePackageName=MyBasePackageName',
//            '-s', aptOutput
//    ]
//
//    variant.javaCompile.source = variant.javaCompile.source.filter { p ->
//        return !p.getPath().startsWith(aptOutputDir.getPath())
//    }
//
//    variant.javaCompile.doFirst {
//        aptOutput.mkdirs()
//    }
//}

apt {
    arguments {
        resourcePackageName android.defaultConfig.packageName
        androidManifestFile variant.processResources.manifestFile
    }
}