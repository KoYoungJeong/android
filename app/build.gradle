apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply plugin: 'android-apt'     // Android-Annotation
apply plugin: 'org.robolectric'     // Android-Test
apply plugin: 'me.tatarka.retrolambda'  //RetroLamda
apply plugin: 'aar-link-sources'
apply from: 'valid.gradle'       // Gradle Propertie Valid Check

configurations {
    apt
}

apply plugin: 'checkstyle'
apply plugin: 'pmd'

task pmd(type: Pmd) {

    source 'src/main'
    include '**/*.java'
//    exclude('**/*Test.java')

    ruleSetFiles = files('../pmd.xml')
    ignoreFailures = true

}

task checkstyles(type: Checkstyle) {

    configFile file('../checkstyle.xml')
    source('src/main')
    include '**/*.java'
//    exclude('**/*Test.java')
    classpath = files()


    showViolations = true
    ignoreFailures = true

}

checkstyle {
    toolVersion = "6.2"
}

dependencies {

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    apt 'org.androidannotations:androidannotations:3.2'

    compile 'com.android.support:multidex:1.0.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Google
    compile 'com.google.android.gms:play-services-analytics:7.0.+'
    compile 'com.google.android.gms:play-services-gcm:7.0.+'
    compile 'com.android.support:support-v4:22.1.+'
    compile 'com.android.support:appcompat-v7:22.1.+'
    compile 'com.android.support:support-v13:22.1.+'
    compile 'com.android.support:recyclerview-v7:22.1.+'
    compile 'com.android.support:cardview-v7:22.1.+'

    // UI
    compile 'com.github.johnpersano:supertoasts:1.3.4@aar'
    compile 'com.github.chrisbanes.photoview:library:1.2.+@aar'
    aarLinkSources 'com.github.chrisbanes.photoview:library:1.2.+:sources@jar'
    compile 'com.iangclifton.android:floatlabel:1.0.2'
    compile 'com.eowise:recyclerview-stickyheaders:0.5.2@aar'
    aarLinkSources 'com.eowise:recyclerview-stickyheaders:0.5.2:sources@jar'

    // Boilerplate
    compile 'de.greenrobot:eventbus:2.4.+'
    compile 'org.androidannotations:androidannotations-api:3.2'
    // Network
    compile 'org.springframework.android:spring-android-core:1.0.+'
    compile 'org.springframework.android:spring-android-rest-template:1.0.+'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.+'
    compile 'com.github.nkzawa:socket.io-client:0.5.0'

    // Cache
    compile 'com.github.bumptech.glide:glide:3.6.0' // EXIF orientation 이슈 해결 된 것으로 보임.
    compile 'com.koushikdutta.ion:ion:2.1.+'
    // Analytics & report
    compile 'com.mixpanel.android:mixpanel-android:4.5.0@aar'
    compile 'com.parse.bolts:bolts-android:1.1.4'

    // RxJava
    compile 'io.reactivex:rxandroid:0.24.+'

    // Test : Robolectric, Junit4
    testCompile 'org.robolectric:robolectric:2.4'
    testCompile 'com.jayway.awaitility:awaitility:1.6.+'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.+'
    compile('com.crashlytics.sdk.android:crashlytics:2.4.0@aar') {
        transitive = true;
    }

}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    defaultConfig {
        applicationId 'com.tosslab.jandi.app'
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 52
        versionName '1.0.4'

        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {

        debug {
            debuggable true
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

    }
    productFlavors {
        full {     // release version
//            proguardFile 'proguard-rules.txt'
        }
        dev {       // demo version
            applicationId 'com.tosslab.jandi.app.dev'
            versionName(defaultConfig.versionName + ".dev." + inhouse_version)
//            minSdkVersion 21
        }

        inhouse {
            versionName(defaultConfig.versionName + "." + inhouse_version)
            buildTypes {
            }
        }

    }

    sourceSets {
        inhouse {
            java.srcDirs = ['src/full/java']
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    signingConfigs {
        release {
            storeFile file("tossandroid.keystore")
            keyAlias "tosskeystore"
            storePassword "Xhtmfoq23@#"
            keyPassword "Xhtmfoq23@#"
        }
        debug {
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    jacoco {
        version = '0.7.2.201409121644'
    }

    dexOptions {
        javaMaxHeapSize "2048M"
    }
}


apt {
    arguments {
        resourcePackageName android.defaultConfig.applicationId
        androidManifestFile variant.outputs[0].processResources.manifestFile
    }
}

robolectric {
    // configure the set of classes for JUnit tests
    include '**/*Test.class'

    // configure max heap size of the test JVM
    maxHeapSize = "2048m"

    ignoreFailures true

}

project.gradle.taskGraph.whenReady {
    testDevDebug {
        ignoreFailures = true
    }
}

retrolambda {
    jdk java8_home
    oldJdk java6_home
    javaVersion JavaVersion.VERSION_1_6
}

// It references by http://chrisjenx.com/gradle-robolectric-jacoco-dagger
apply plugin: "jacoco"

def coverageSourceDirs = [
        'src/main/java'
]

// This differs per what flavors buildTypes etc.
// But this example shows the 'testDebug'
// which is standard for Robolectric
task jacocoTestReport(type: JacocoReport, dependsOn: "testDevDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    // class R is used, but usage will not be covered, so ignore this class from report
    // This differs per plugin version (0.10 -> 0.11)
    // have very different fileTrees.
    // I have added rules to Ignore Dagger/Butterknife
    classDirectories = fileTree(
            dir: 'build/intermediates/classes/dev/debug',
            excludes: ['**/R.class',
                       '**/*Presenter*.class',
                       '**/*ViewModel*.class',
                       '**/*_*.class',
                       '**/android/support/v7/appcompat/*.class',
                       '**/com/github/johnpersano/supertoasts/*.class',
                       '**/com/google/android/gms/*.class',
                       '**/com/mixpanel/android/*.class',
                       '**/se/emilsjolander/stickylistheaders/*.class'])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDevDebug.exec')
    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File('build/intermediates/classes/dev').eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }

    afterEvaluate {
        // just clean up coveralls dashboard, following reports are not of interest
        testDevDebug.reports.junitXml.enabled = false
    }
}